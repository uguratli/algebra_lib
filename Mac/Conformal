#!/usr/local/bin/cadabra2
{a,b,c,d,e,f,g,h,j,k,l,m,n,p,q,r,s,t,v,u,z}::Indices(vector);
{a,b,c,d,e,f,g,h,j,k,l,m,n,p,q,r,s,t,v,u,z}::Integer(0..3);
{P_{a}, D , K_{a} , M_{a b},A,B,C}::NonCommuting;
{P_{a}, D , K_{a} , M_{a b},A,B,C}::Depends(\commutator{#});
{P_{a}, D , K_{a} , M_{a b},A,B,C}::SelfNonCommuting;
M_{a b}::AntiSymmetric;

\eta_{m n}::Metric;
\eta^{m n}::InverseMetric;
\eta_{m n}::Symmetric;
\eta^{m n}::Symmetric;

def post_process(ex):
   unwrap(ex)
   eliminate_kronecker(ex)
   canonicalise(ex)
   rename_dummies(ex)
   collect_terms(ex)
Algebra:={\commutator{P_{a}}{P_{b}} -> 0 ,
\commutator{P_{a}}{K_{b}} -> 2 ( \eta_{a b} D + M_{a b} ) ,
\commutator{P_{a}}{M_{c d}} -> \eta_{a c} P_{d} - \eta_{a d} P_{c}  ,
\commutator{P_{a}}{D} -> - P_{a} ,
\commutator{K_{a}}{P_{b}} -> - \commutator{P_{b}}{K_{a}} ,
\commutator{K_{a}}{K_{b}} -> 0 ,
\commutator{K_{a}}{M_{c d}} -> \eta_{a c} K_{d} - \eta_{a d} K_{c} ,
\commutator{K_{a}}{D} -> K_{a} ,
\commutator{M_{c d}}{P_{a}} -> - \commutator{P_{a}}{M_{c d}} ,
\commutator{M_{c d}}{K_{a}} -> - \commutator{K_{a}}{M_{c d}} ,
\commutator{M_{c d}}{M_{e f}} ->  \eta_{d e} M_{c f}-\eta_{c e} M_{d f}-\eta_{d f} M_{c e}+\eta_{c f} M_{d e} ,
\commutator{M_{c d}}{D} -> 0 ,
\commutator{D}{P_{a}} -> - \commutator{P_{a}}{D} ,
\commutator{D}{K_{a}} -> - \commutator{K_{a}}{D} ,
\commutator{D}{M_{c d}} -> - \commutator{M_{c d}}{D} ,
\commutator{D}{D} -> 0 ,
};
Jacobi1:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->D$)
substitute(_,$C->D$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi2:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->D$)
substitute(_,$C->P_{a}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi3:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->D$)
substitute(_,$C->K_{a}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi4:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->D$)
substitute(_,$C->M_{d e}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi5:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->P_{a}$)
substitute(_,$C->P_{b}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi6:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->P_{a}$)
substitute(_,$C->K_{b}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);


Jacobi7:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->P_{a}$)
substitute(_,$C->M_{d e}$);
substitute(_, Algebra);
distribute(_);
unwrap(_);
substitute(_, Algebra);
substitute(_, Algebra);
substitute(_, Algebra);
distribute(_);
substitute(_, Algebra);
distribute(_);
distribute(_)
distribute(_)
canonicalise(_);
unwrap(_);
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra);
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi8:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->K_{a}$)
substitute(_,$C->K_{b}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi9:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->K_{a}$)
substitute(_,$C->M_{d e}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi10:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->D$)
substitute(_,$B->M_{d e}$)
substitute(_,$C->M_{f g}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi11:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->P_{a}$)
substitute(_,$B->P_{b}$)
substitute(_,$C->P_{c}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi12:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->P_{a}$)
substitute(_,$B->P_{b}$)
substitute(_,$C->K_{c}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi13:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->P_{a}$)
substitute(_,$B->P_{b}$)
substitute(_,$C->M_{d e}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi14:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->P_{a}$)
substitute(_,$B->K_{b}$)
substitute(_,$C->K_{c}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi15:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->P_{a}$)
substitute(_,$B->K_{b}$)
substitute(_,$C->M_{d e}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi16:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->P_{a}$)
substitute(_,$B->M_{d e}$)
substitute(_,$C->M_{f g}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi17:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->K_{a}$)
substitute(_,$B->K_{b}$)
substitute(_,$C->K_{c}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi18:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->K_{a}$)
substitute(_,$B->K_{b}$)
substitute(_,$C->M_{d e}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi19:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->K_{a}$)
substitute(_,$B->M_{d e}$)
substitute(_,$C->M_{f g}$);
substitute(_, Algebra)
distribute(_)
unwrap(_)
substitute(_, Algebra)
substitute(_, Algebra)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
distribute(_)
distribute(_)
canonicalise(_)
unwrap(_)
epsilon_to_delta(_)
expand_delta(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
unwrap(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra)
distribute(_)
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);

Jacobi20:= \commutator{A}{\commutator{B}{C}} + \commutator{C}{\commutator{A}{B}}  + \commutator{B}{\commutator{C}{A}} :
substitute(_,$A->M_{d e}$)
substitute(_,$B->M_{f g}$)
substitute(_,$C->M_{h j}$);
substitute(_, Algebra);
distribute(_);
unwrap(_);
substitute(_, Algebra);
substitute(_, Algebra);
substitute(_, Algebra);
distribute(_);
substitute(_, Algebra);
distribute(_);
distribute(_);
distribute(_);
canonicalise(_);
unwrap(_);
epsilon_to_delta(_);
expand_delta(_);
distribute(_);
combine(_);
eliminate_kronecker(_);
unwrap(_);
sort_product(_);
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
substitute(_, Algebra);
distribute(_);
canonicalise(_)
substitute(_, Algebra)
distribute(_)
substitute(_, Algebra)
distribute(_)
epsilon_to_delta(_)
expand_delta(_)
unwrap(_)
distribute(_)
combine(_)
eliminate_kronecker(_)
sort_product(_)
factor_out(_,$H, P_{a}, G_{a}, J_{a}, N, T_{a}, B_{a}, S, A, M_{a b}, C, D , K_{a}$)
canonicalise(_)
distribute(_)
canonicalise(_);


 
